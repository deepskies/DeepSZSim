deepszsim.simtools
==================

.. py:module:: deepszsim.simtools

.. autoapi-nested-parse::

   beam convolution, SZ function and CMB simulation tools 



Functions
---------

.. autoapisummary::

   deepszsim.simtools.convolve_map_with_gaussian_beam
   deepszsim.simtools.f_sz
   deepszsim.simtools.add_cmb_map_and_convolve
   deepszsim.simtools.get_cls
   deepszsim.simtools.make_cmb_map


Module Contents
---------------

.. py:function:: convolve_map_with_gaussian_beam(pix_size_arcmin, beam_size_fwhm_arcmin, map_to_convolve)

   Parameters:
   ----------
   pix_size_arcmin: float
       size of each pixel in arcmin
   beam_size_fwhm_arcmin: float
       beam size in arcmin
   map_to_convolve: array
       image to apply beam convolution to

   Return:
   -------
   convolved_map: array

   Note - pixel size and beam_size need to be in the same units


.. py:function:: f_sz(freq_ghz, T_CMB_K)

   the leading order correction to blackbody from Compton scattering
   see Eq 3.31 of https://background.uchicago.edu/~whu/thesis/chap3.pdf

   Parameters:
   ----------
   freq_ghz: float
       Observation frequency f, in units of GHz
   T_CMB_K: Quantity instance
       Temperature of CMB in K

   Return:
   ------
   fsz: float
       radiation frequency


.. py:function:: add_cmb_map_and_convolve(dT_map_uK, ps, pix_size_arcmin, beam_size_fwhp_arcmin)

   Parameters:
   ----------
   dT_map_uK: array
       the map to add to the CMB, units of -uK
   ps: array
       power spectrum with shape (3, 3, lmax); clTT spectrum at ps[0][0]
   pix_size_arcmin: float
       size of each pixel in arcmin
   beam_size_fwhp_arcmin: float or None
       beam size in arcmin

   Return:
   ------
   dT submap: array
       dT submap with same shape as dT_map, in units of -uK


.. py:function:: get_cls(ns, cosmo, lmax=2000)

   Makes a cmb temperature map based on the given power spectrum

   Parameters:
   ----------
   ns: float
       scalar spectral index of the power-spectrum
   cosmo: FlatLambaCDM instance
       background cosmology

   Return:
   ------
   ps array
       power spectrum as can be used in szluster.make_cmb_map


.. py:function:: make_cmb_map(shape, pix_size_arcmin, ps, seed=None)

   Makes a cmb temperature map based on the given power spectrum

   Parameters:
   ----------
   shape: tuple
       shape of submap in arcmin
   pix_size_arcmin: float
       size of each pixel in arcmin
   ps: array
       power spectrum with shape (3, 3, lmax); clTT spectrum at ps[0][0]

   Return:
   -------
   cmb T map: array


